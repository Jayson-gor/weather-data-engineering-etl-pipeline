version: '3.8'

services:
  db:
    container_name: postgres_container
    image: postgres:14.19
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5000:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
    networks:
      - my-network
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - my-network

  airflow:
    container_name: airflow_container
    image: apache/airflow:3.0.5
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@db:5432/airflow_db
      AIRFLOW__API__SECRET_KEY: "your_secret_key"
      AIRFLOW__API__EXPOSE_CONFIG: "true"
      AIRFLOW__CORE__AUTH_MANAGER: "airflow.api_fastapi.auth.managers.simple.simple_auth_manager.SimpleAuthManager"
      AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_USERS: "admin:admin"
      AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS: "True"
      AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: "UTC"
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    ports:
      - "8000:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./api_request:/opt/airflow/api_request
      - ./dbt:/opt/airflow/dbt
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
    networks:
      - my-network
    command: >
      bash -c "airflow db migrate && airflow standalone"

  dbt:
      container_name: dbt_container
      image: ghcr.io/dbt-labs/dbt-postgres:1.9.latest
      volumes:
        - ./dbt:/root/dbt
      working_dir: /root/dbt/my_project
      environment:
        DBT_PROFILES_DIR: "/root/.dbt"
      depends_on:
        - db
      networks:
        - my-network
      entrypoint: ["/bin/bash", "-c"]
      command: |
        "mkdir -p /root/.dbt && 
        echo 'my_project:
          outputs:
            dev:
              type: postgres
              host: db
              user: ${POSTGRES_USER}
              pass: ${POSTGRES_PASSWORD}
              port: 5432
              dbname: ${POSTGRES_DB}
              schema: weather_data
              threads: 4
          target: dev' > /root/.dbt/profiles.yml &&
        chmod -R 777 /root/dbt &&
        dbt run &&
        tail -f /dev/null"

networks:
  my-network:
    driver: bridge
